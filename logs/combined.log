{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-21T22:38:50.325Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'validate') - POST /api/users/register","timestamp":"2025-03-21T22:39:01.360Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-21T22:41:09.338Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'validate') - POST /api/users/register","timestamp":"2025-03-21T22:41:27.544Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-21T22:43:59.198Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'validate') - POST /api/users/register","timestamp":"2025-03-21T22:44:08.126Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-21T22:48:13.449Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-21T23:28:33.184Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'validate') - POST /api/cases","timestamp":"2025-03-21T23:29:25.541Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'validate') - POST /api/cases","timestamp":"2025-03-21T23:31:48.611Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-21T23:32:04.017Z"}
{"code":"EAUTH","command":"AUTH PLAIN","level":"error","message":"Erro ao solicitar redefinição de senha: Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-22780f3a851sm23893815ad.33 - gsmtp","response":"535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-22780f3a851sm23893815ad.33 - gsmtp","responseCode":535,"stack":"Error: Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-22780f3a851sm23893815ad.33 - gsmtp\n    at SMTPConnection._formatError (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:809:19)\n    at SMTPConnection._actionAUTHComplete (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:1588:34)\n    at SMTPConnection.<anonymous> (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:556:26)\n    at SMTPConnection._processResponse (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:993:20)\n    at SMTPConnection._onData (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:774:14)\n    at SMTPConnection._onSocketData (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:195:44)\n    at TLSSocket.emit (node:events:519:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n    at Readable.push (node:internal/streams/readable:390:5)","timestamp":"2025-03-21T23:40:18.766Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-21T23:40:30.533Z"}
{"code":"EAUTH","command":"AUTH PLAIN","level":"error","message":"Erro ao solicitar redefinição de senha: Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-227811f0cb2sm23756755ad.212 - gsmtp","response":"535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-227811f0cb2sm23756755ad.212 - gsmtp","responseCode":535,"stack":"Error: Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-227811f0cb2sm23756755ad.212 - gsmtp\n    at SMTPConnection._formatError (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:809:19)\n    at SMTPConnection._actionAUTHComplete (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:1588:34)\n    at SMTPConnection.<anonymous> (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:556:26)\n    at SMTPConnection._processResponse (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:993:20)\n    at SMTPConnection._onData (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:774:14)\n    at SMTPConnection._onSocketData (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:195:44)\n    at TLSSocket.emit (node:events:519:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n    at Readable.push (node:internal/streams/readable:390:5)","timestamp":"2025-03-21T23:40:33.132Z"}
{"expiredAt":"2025-03-21T23:50:49.000Z","level":"error","message":"Erro na autenticação: jwt expired","name":"TokenExpiredError","stack":"TokenExpiredError: jwt expired\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:190:21\n    at getSecret (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:97:14)\n    at module.exports [as verify] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:101:10)\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\middleware\\auth.js:10:27\n    at Layer.handle [as handle_request] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\index.js:346:12)","timestamp":"2025-03-21T23:51:00.837Z"}
{"expiredAt":"2025-03-21T23:50:49.000Z","level":"error","message":"Erro na autenticação: jwt expired","name":"TokenExpiredError","stack":"TokenExpiredError: jwt expired\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:190:21\n    at getSecret (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:97:14)\n    at module.exports [as verify] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:101:10)\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\middleware\\auth.js:10:27\n    at Layer.handle [as handle_request] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\index.js:346:12)","timestamp":"2025-03-21T23:51:11.950Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-22T01:10:21.668Z"}
{"expiredAt":"2025-03-21T23:50:49.000Z","level":"error","message":"Erro na autenticação: jwt expired","name":"TokenExpiredError","stack":"TokenExpiredError: jwt expired\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:190:21\n    at getSecret (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:97:14)\n    at module.exports [as verify] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:101:10)\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\middleware\\auth.js:10:27\n    at Layer.handle [as handle_request] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\index.js:346:12)","timestamp":"2025-03-22T01:12:07.813Z"}
{"expiredAt":"2025-03-21T23:50:49.000Z","level":"error","message":"Erro na autenticação: jwt expired","name":"TokenExpiredError","stack":"TokenExpiredError: jwt expired\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:190:21\n    at getSecret (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:97:14)\n    at module.exports [as verify] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:101:10)\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\middleware\\auth.js:10:27\n    at Layer.handle [as handle_request] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\index.js:346:12)","timestamp":"2025-03-22T01:14:28.406Z"}
{"expiredAt":"2025-03-21T23:50:49.000Z","level":"error","message":"Erro na autenticação: jwt expired","name":"TokenExpiredError","stack":"TokenExpiredError: jwt expired\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:190:21\n    at getSecret (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:97:14)\n    at module.exports [as verify] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\jsonwebtoken\\verify.js:101:10)\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\middleware\\auth.js:10:27\n    at Layer.handle [as handle_request] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\node_modules\\express\\lib\\router\\index.js:346:12)","timestamp":"2025-03-22T01:14:29.445Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-22T01:26:26.766Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-24T22:20:13.692Z"}
{"level":"error","message":"Origem não permitida pelo CORS - OPTIONS /api/users/register","timestamp":"2025-03-24T22:20:22.626Z"}
{"level":"error","message":"Origem não permitida pelo CORS - OPTIONS /api/users/register","timestamp":"2025-03-24T22:43:09.052Z"}
{"level":"error","message":"Origem não permitida pelo CORS - OPTIONS /api/users/register","timestamp":"2025-03-24T22:53:21.777Z"}
{"level":"error","message":"Origem não permitida pelo CORS - OPTIONS /api/users/register","timestamp":"2025-03-24T22:53:22.768Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-24T22:56:30.080Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-24T23:15:22.763Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T00:22:17.541Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T02:17:26.320Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T02:45:37.620Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T02:47:59.145Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T02:51:18.146Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T03:10:04.886Z"}
{"level":"error","message":"ENOENT: no such file or directory, stat 'C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\PlataformaOdontoLegal\\PlataformaOdontoLegal\\frontend\\public\\login.html' - GET /","timestamp":"2025-03-25T03:17:24.453Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T21:56:35.652Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T22:09:58.249Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T22:18:50.823Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T22:55:47.221Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T23:09:55.594Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-03-25T23:20:41.780Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-01T20:18:08.935Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-03T22:52:37.544Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-04T22:01:40.601Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-04T22:10:17.671Z"}
{"code":11000,"index":0,"keyPattern":{"email":1},"keyValue":{"email":"bruno@teste.com"},"level":"error","message":"Erro ao registrar usuário: E11000 duplicate key error collection: plataforma-odontolegal.users index: email_1 dup key: { email: \"bruno@teste.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: plataforma-odontolegal.users index: email_1 dup key: { email: \"bruno@teste.com\" }\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\projeto\\PlataformaOdontoLegal\\node_modules\\mongodb\\lib\\operations\\insert.js:50:33\n    at C:\\Users\\Lead Performance\\OneDrive\\Área de Trabalho\\projeto\\PlataformaOdontoLegal\\node_modules\\mongodb\\lib\\operations\\command.js:84:64\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-04-04T22:10:39.586Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-25T00:13:44.928Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /","timestamp":"2025-04-25T00:18:32.088Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /favicon.ico","timestamp":"2025-04-25T00:18:32.179Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /","timestamp":"2025-04-25T00:18:51.009Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - POST /","timestamp":"2025-04-25T00:19:59.741Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-25T00:22:59.275Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /","timestamp":"2025-04-25T00:23:12.145Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /?annotations=mancha,fratura","timestamp":"2025-04-25T00:25:15.248Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /?annotations=mancha,fratura","timestamp":"2025-04-25T00:25:16.316Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /","timestamp":"2025-04-25T00:25:37.168Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /","timestamp":"2025-04-25T00:25:38.280Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /","timestamp":"2025-04-25T00:25:39.153Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-25T00:27:26.798Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /","timestamp":"2025-04-25T00:27:35.819Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /evidencias","timestamp":"2025-04-25T00:29:03.836Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /evidencias/","timestamp":"2025-04-25T00:29:30.219Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - POST /evidencias/","timestamp":"2025-04-25T00:34:25.476Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - POST /","timestamp":"2025-04-25T00:34:43.978Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - POST /","timestamp":"2025-04-25T00:37:52.174Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - POST /","timestamp":"2025-04-25T00:40:17.380Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - POST /","timestamp":"2025-04-25T00:40:28.060Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - GET /","timestamp":"2025-04-25T00:40:31.297Z"}
{"level":"warn","message":"MongoDB desconectado, tentando reconectar...","timestamp":"2025-04-25T01:36:14.456Z"}
{"level":"warn","message":"MongoDB desconectado, tentando reconectar...","timestamp":"2025-04-25T01:36:16.523Z"}
{"level":"warn","message":"MongoDB desconectado, tentando reconectar...","timestamp":"2025-04-27T01:28:20.242Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T01:53:03.104Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - OPTIONS /auth/login","timestamp":"2025-04-27T01:53:06.701Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - OPTIONS /auth/login","timestamp":"2025-04-27T01:53:07.813Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T01:55:00.286Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split') - OPTIONS /api/users/login","timestamp":"2025-04-27T01:55:04.212Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T02:45:48.196Z"}
{"level":"error","message":"Erro ao registrar usuário: secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\jsonwebtoken\\sign.js:105:20)\n    at generateTokens (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\controllers\\userController.js:12:27)\n    at exports.registerUser (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\controllers\\userController.js:58:43)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-04-27T02:50:28.323Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T02:52:08.683Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T03:14:18.459Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T03:20:54.730Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T03:22:06.801Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T03:22:34.444Z"}
{"level":"error","message":"Expected double-quoted property name in JSON at position 70 (line 4 column 1) - POST /api/users/login","timestamp":"2025-04-27T04:22:02.148Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T05:05:42.662Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T05:22:34.985Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T06:07:56.013Z"}
{"level":"error","message":"Erro ao buscar dados do usuário: Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at exports.getMe (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\controllers\\userController.js:102:29)\n    at Layer.handle [as handle_request] (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at router (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\index.js:47:12)","timestamp":"2025-04-27T14:38:07.311Z"}
{"level":"error","message":"Erro ao buscar dados do usuário: Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at exports.getMe (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\controllers\\userController.js:102:29)\n    at Layer.handle [as handle_request] (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at router (C:\\Users\\Deyvid\\BacckendPI\\PlataformaOdontoLegal-main\\node_modules\\express\\lib\\router\\index.js:47:12)","timestamp":"2025-04-27T14:38:07.361Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T14:40:52.184Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T14:53:01.787Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T18:47:13.465Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T19:17:30.912Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T20:57:08.945Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-27T21:08:27.468Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T00:24:30.955Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T00:43:48.208Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T03:54:49.001Z"}
{"_message":"Evidence validation failed","errors":{"type":{"kind":"enum","message":"`Radiografia Panorâmica` is not a valid enum value for path `type`.","name":"ValidatorError","path":"type","properties":{"enumValues":["imagem","texto"],"message":"`Radiografia Panorâmica` is not a valid enum value for path `type`.","path":"type","type":"enum","value":"Radiografia Panorâmica"},"value":"Radiografia Panorâmica"}},"level":"error","message":"Erro ao adicionar evidência: Evidence validation failed: type: `Radiografia Panorâmica` is not a valid enum value for path `type`.","stack":"ValidationError: Evidence validation failed: type: `Radiografia Panorâmica` is not a valid enum value for path `type`.\n    at Document.invalidate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\document.js:3219:32)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\document.js:3012:17\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","timestamp":"2025-04-28T04:04:36.036Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T04:05:19.187Z"}
{"_message":"Evidence validation failed","errors":{"type":{"kind":"enum","message":"`Radiografia Panorâmica` is not a valid enum value for path `type`.","name":"ValidatorError","path":"type","properties":{"enumValues":["imagem","texto"],"message":"`Radiografia Panorâmica` is not a valid enum value for path `type`.","path":"type","type":"enum","value":"Radiografia Panorâmica"},"value":"Radiografia Panorâmica"}},"level":"error","message":"Erro ao adicionar evidência: Evidence validation failed: type: `Radiografia Panorâmica` is not a valid enum value for path `type`.","stack":"ValidationError: Evidence validation failed: type: `Radiografia Panorâmica` is not a valid enum value for path `type`.\n    at Document.invalidate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\document.js:3219:32)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\document.js:3012:17\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","timestamp":"2025-04-28T04:05:27.282Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T04:10:57.156Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T04:36:27.755Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T04:42:02.838Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T12:41:14.957Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T13:00:27.681Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T13:57:01.419Z"}
{"level":"error","message":"Erro ao adicionar evidência: annotations is not defined","stack":"ReferenceError: annotations is not defined\n    at exports.uploadEvidence (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\controllers\\evidenceController.js:50:7)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-04-28T13:57:22.887Z"}
{"level":"error","message":"Erro ao adicionar evidência: annotations is not defined","stack":"ReferenceError: annotations is not defined\n    at exports.uploadEvidence (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\controllers\\evidenceController.js:50:7)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-04-28T13:58:05.773Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T14:04:28.623Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T14:24:28.683Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T14:38:24.312Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:09:48.269Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:09:48.325Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:09:52.708Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:09:52.722Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:09:56.413Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:09:56.421Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:10:02.552Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:10:02.583Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:10:14.310Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:10:14.333Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:10:35.157Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:10:35.180Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:11:42.211Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:11:42.219Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T15:13:15.237Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:13:24.178Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:13:24.193Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T15:15:47.441Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:15:59.314Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:15:59.319Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:16:49.871Z"}
{"level":"error","message":"Erro ao buscar casos: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.","path":"reports.generatedBy","stack":"StrictPopulateError: Cannot populate path `reports.generatedBy` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:50:12)\n    at populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4394:21)\n    at _populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4354:5)\n    at C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4326:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\model.js:4325:10)\n    at model.Query._find (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:2320:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async model.Query.exec (C:\\Users\\Deyvid\\Documents\\frontend-odontolegal\\frontend-react\\PlataformaOdontoLegal-main\\node_modules\\mongoose\\lib\\query.js:4447:11)","timestamp":"2025-04-28T15:17:09.854Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T15:18:40.310Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T15:20:07.986Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T15:29:02.902Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T17:49:47.554Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T18:05:44.675Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T18:09:04.434Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T18:15:41.458Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T19:56:04.600Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T20:00:13.337Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T21:34:59.290Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T21:48:10.897Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-04-28T21:49:21.074Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T19:28:11.909Z"}
{"_message":"Patient validation failed","errors":{"updatedBy":{"kind":"required","message":"Path `updatedBy` is required.","name":"ValidatorError","path":"updatedBy","properties":{"message":"Path `updatedBy` is required.","path":"updatedBy","type":"required"}}},"level":"error","message":"Erro ao criar paciente: Patient validation failed: updatedBy: Path `updatedBy` is required.","stack":"ValidationError: Patient validation failed: updatedBy: Path `updatedBy` is required.\n    at Document.invalidate (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\document.js:3219:32)\n    at C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\document.js:3012:17\n    at C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","timestamp":"2025-06-06T19:51:36.166Z"}
{"_message":"Patient validation failed","errors":{"updatedBy":{"kind":"required","message":"Path `updatedBy` is required.","name":"ValidatorError","path":"updatedBy","properties":{"message":"Path `updatedBy` is required.","path":"updatedBy","type":"required"}}},"level":"error","message":"Erro ao criar paciente: Patient validation failed: updatedBy: Path `updatedBy` is required.","stack":"ValidationError: Patient validation failed: updatedBy: Path `updatedBy` is required.\n    at Document.invalidate (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\document.js:3219:32)\n    at C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\document.js:3012:17\n    at C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","timestamp":"2025-06-06T19:54:58.532Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T19:55:54.923Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T19:55:57.690Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T19:55:58.488Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T19:56:05.629Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T19:56:07.896Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T19:56:10.755Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T19:56:14.267Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T19:56:27.671Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:09:31.274Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:10:58.778Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:11:03.597Z"}
{"level":"error","message":"Erro ao remover paciente: patient.remove is not a function","stack":"TypeError: patient.remove is not a function\n    at exports.deletePatient (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\controllers\\patientController.js:177:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-06-06T20:11:07.103Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:12:13.446Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:12:45.905Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:28:04.926Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:28:20.576Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:28:44.711Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:28:48.139Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:28:57.615Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:29:01.393Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:29:07.147Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:29:10.510Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:29:14.577Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:29:16.501Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:29:26.929Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:29:27.955Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:29:43.226Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:30:03.870Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:30:23.068Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:30:44.073Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:30:50.945Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:30:54.285Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:31:06.197Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:31:27.525Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:31:28.770Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:31:34.006Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:31:38.891Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:31:58.086Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:31:59.039Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:32:15.994Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:32:29.611Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:32:31.157Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:32:40.110Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:32:50.045Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:33:22.596Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:43:49.430Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:44:03.806Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:44:16.577Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:44:49.422Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:46:55.715Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:49:34.382Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:53:57.978Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:54:00.313Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:55:19.133Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:55:27.783Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T20:57:26.419Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T21:00:17.365Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T21:00:33.690Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T21:00:38.981Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T21:00:47.053Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T21:00:56.976Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T21:06:11.451Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T21:06:12.254Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T21:07:28.802Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-06T21:07:36.756Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-07T21:07:25.324Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T16:11:52.886Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T16:19:40.670Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T16:19:49.136Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T16:20:00.912Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:00:13.206Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:10:13.705Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:10:14.849Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:12:39.912Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:19:24.987Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:24:40.402Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:26:45.009Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:27:28.937Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:27:30.017Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:27:50.150Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:27:57.595Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:31:09.038Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:35:51.300Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:35:59.979Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:36:23.321Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:40:40.567Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:40:48.614Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:42:14.739Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:42:18.724Z"}
{"level":"error","message":"Erro ao acessar a API do Gemini: fetch is not a function","stack":"TypeError: fetch is not a function\n    at generateTextWithGemini (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\routes\\reportRoutes.js:26:28)\n    at C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\routes\\reportRoutes.js:141:40\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-06-08T17:42:33.632Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:45:52.320Z"}
{"error":{"code":404,"message":"models/gemini-pro is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.","status":"NOT_FOUND"},"level":"error","message":"Erro na resposta da API Gemini:","timestamp":"2025-06-08T17:46:24.707Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T17:47:52.599Z"}
{"kind":"ObjectId","level":"error","message":"Erro ao adicionar evidência: Cast to ObjectId failed for value \"6845cede0a0fa04de494f848\\n\" (type string) at path \"_id\" for model \"Case\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"6845cede0a0fa04de494f848\\n\" (type string) at path \"_id\" for model \"Case\"\n    at ObjectId.cast (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\schematype.js:1219:12)\n    at SchemaType.castForQuery (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\schematype.js:1633:15)\n    at cast (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\cast.js:389:32)\n    at Query.cast (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\query.js:4927:12)\n    at Query._castConditions (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\query.js:2237:10)\n    at model.Query._findOne (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\query.js:2533:8)\n    at model.Query.exec (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\query.js:4447:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async exports.uploadEvidence (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\controllers\\evidenceController.js:39:18)","stringValue":"\"6845cede0a0fa04de494f848\\n\"","timestamp":"2025-06-08T18:02:30.040Z","value":"6845cede0a0fa04de494f848\n","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Erro ao adicionar evidência: Cast to ObjectId failed for value \"6845cede0a0fa04de494f848\\n\" (type string) at path \"_id\" for model \"Case\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"6845cede0a0fa04de494f848\\n\" (type string) at path \"_id\" for model \"Case\"\n    at ObjectId.cast (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\schematype.js:1219:12)\n    at SchemaType.castForQuery (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\schematype.js:1633:15)\n    at cast (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\cast.js:389:32)\n    at Query.cast (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\query.js:4927:12)\n    at Query._castConditions (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\query.js:2237:10)\n    at model.Query._findOne (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\query.js:2533:8)\n    at model.Query.exec (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\node_modules\\mongoose\\lib\\query.js:4447:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async exports.uploadEvidence (C:\\Users\\Eduardo Bezerra\\Documents\\Repositórios\\peri-backend\\controllers\\evidenceController.js:39:18)","stringValue":"\"6845cede0a0fa04de494f848\\n\"","timestamp":"2025-06-08T18:03:53.130Z","value":"6845cede0a0fa04de494f848\n","valueType":"string"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T18:10:16.499Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T18:12:42.337Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T18:16:11.172Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T18:19:09.440Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T18:19:38.661Z"}
{"level":"info","message":"MongoDB conectado com sucesso","timestamp":"2025-06-08T18:22:29.462Z"}
